{"ast":null,"code":"var _jsxFileName = \"/Users/Bruno/Dev/Fullstack/weather-app-react/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { Alert, Col, Row, Spinner, Badge, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: '',\n      loading: '',\n      country: '',\n      responseToPost: '',\n      error: ''\n    };\n\n    this.handleSubmit = async e => {\n      this.setState({\n        loading: true\n      });\n      e.preventDefault();\n      const response = await fetch('api/weather', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cityName: this.state.country\n        })\n      });\n      const body = await response.json();\n      this.setState({\n        responseToPost: body\n      });\n      this.setState({\n        loading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: false\n    });\n    /*     this.callApi()\n          .then(res => this.setState({ response: res.express }))\n          .catch(err => console.log(err)); */\n  }\n  /*   callApi = async () => {\n      const response = await fetch('/api/weather');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      \n      return body;\n    }; */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: /*#__PURE__*/_jsxDEV(Badge, {\n          color: \"light\",\n          pill: true,\n          children: \"v1.0 | Dev by Bruno Mendez\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(Badge, {\n          color: \"primary\",\n          children: \"How's The Weather In?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 70\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        action: \"api/weather\",\n        method: \"post\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          row: true,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            id: \"city\",\n            value: this.state.country,\n            placeholder: \"City name\",\n            onChange: e => this.setState({\n              country: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"warning\",\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), this.state.responseToPost !== '' && !this.state.loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.responseToPost.icon_url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"primary\",\n          children: [\" Weather of \", this.state.responseToPost.city, \": \", this.state.responseToPost.desc]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"success\",\n          children: [\" Temperature: \", this.state.responseToPost.temp, \" \\xB0C \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"danger\",\n          children: [\" Max:  \", this.state.responseToPost.max, \" \\xB0C \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"secondary\",\n          children: [\" Min: \", this.state.responseToPost.min, \" \\xB0C \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"info\",\n          children: [\" Feels like: \", this.state.responseToPost.feels, \" \\xB0C \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), this.state.loading && /*#__PURE__*/_jsxDEV(Spinner, {\n        type: \"grow\",\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Bruno/Dev/Fullstack/weather-app-react/client/src/App.js"],"names":["React","Component","Alert","Col","Row","Spinner","Badge","Button","Form","FormGroup","Label","Input","FormText","App","state","response","loading","country","responseToPost","error","handleSubmit","e","setState","preventDefault","fetch","method","headers","body","JSON","stringify","cityName","json","componentDidMount","render","target","value","icon_url","city","desc","temp","max","min","feels"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Alert, Col, Row, Spinner, Badge,Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    response: '',\n    loading: '',\n    country: '',\n    responseToPost: '',\n    error:'',\n  };\n  \n  componentDidMount() {\n    this.setState({ loading: false });\n/*     this.callApi()\n      .then(res => this.setState({ response: res.express }))\n      .catch(err => console.log(err)); */\n  }\n  \n/*   callApi = async () => {\n    const response = await fetch('/api/weather');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    \n    return body;\n  }; */\n  \n  handleSubmit = async e => {\n    this.setState({ loading: true });\n    e.preventDefault();\n    const response = await fetch('api/weather', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ cityName: this.state.country }),\n    })\n    const body = await response.json();\n\n    this.setState({ responseToPost: body });\n    this.setState({ loading: false });\n  };\n  \nrender() {\n    return (\n      <div className=\"App\">\n         <h6><Badge color=\"light\" pill>v1.0 | Dev by Bruno Mendez</Badge></h6>\n         <br></br>\n        <h1><Badge color=\"primary\">How's The Weather In?</Badge></h1><br></br>\n        <Form action=\"api/weather\"method =\"post\" onSubmit={this.handleSubmit}>\n            <FormGroup row>\n              <Input\n                type=\"text\"\n                id=\"city\"\n                value={this.state.country}\n                placeholder=\"City name\"\n                onChange={e => this.setState({ country: e.target.value })}\n              />\n            </FormGroup>\n            <br></br>\n\n          <Button color=\"warning\"type=\"submit\">Search</Button>\n        </Form>\n        <br></br>\n\n        {this.state.responseToPost!=='' && !this.state.loading &&\n            <>\n                <img src={this.state.responseToPost.icon_url}></img>\n                <Alert color=\"primary\"> Weather of {this.state.responseToPost.city}: {this.state.responseToPost.desc}</Alert> \n                <Alert color=\"success\"> Temperature: {this.state.responseToPost.temp} °C </Alert>\n                <Alert color=\"danger\"> Max:  {this.state.responseToPost.max} °C </Alert>\n                <Alert color=\"secondary\"> Min: {this.state.responseToPost.min} °C </Alert>\n                <Alert color=\"info\"> Feels like: {this.state.responseToPost.feels} °C </Alert>\n            </>\n        }\n        {this.state.loading &&\n          <Spinner type=\"grow\" color=\"primary\" />\n        }\n       \n      </div>\n    );\n   \n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}