{"ast":null,"code":"var _jsxFileName = \"/Users/Bruno/Dev/Fullstack/weather-app-react/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { Spinner, Badge, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: '',\n      loading: '',\n      country: '',\n      responseToPost: ''\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('api/weather', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cityName: this.state.country\n        })\n      });\n      const body = await response.json();\n      this.setState({\n        responseToPost: body\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: false\n    });\n    /*     this.callApi()\n          .then(res => this.setState({ response: res.express }))\n          .catch(err => console.log(err)); */\n  }\n  /*   callApi = async () => {\n      const response = await fetch('/api/weather');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      \n      return body;\n    }; */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(Badge, {\n          color: \"warning\",\n          children: \"Weather React application\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        action: \"api/weather\",\n        method: \"post\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"city\",\n            Ciudad: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            id: \"city\",\n            value: this.state.country,\n            onChange: e => this.setState({\n              country: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"danger\",\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), this.state.responseToPost !== '' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperatura de \", this.state.responseToPost.city, \": \", this.state.responseToPost.temp, \" celcius\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Descripcion: \", this.state.responseToPost.desc]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.responseToPost.icon_url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Spinner, {\n        type: \"grow\",\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Bruno/Dev/Fullstack/weather-app-react/client/src/App.js"],"names":["React","Component","Spinner","Badge","Button","Form","FormGroup","Label","Input","FormText","App","state","response","loading","country","responseToPost","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","cityName","json","setState","componentDidMount","render","target","value","city","temp","desc","icon_url"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Spinner, Badge,Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    response: '',\n    loading: '',\n    country: '',\n    responseToPost: '',\n  };\n  \n  componentDidMount() {\n    this.setState({ loading: false });\n/*     this.callApi()\n      .then(res => this.setState({ response: res.express }))\n      .catch(err => console.log(err)); */\n  }\n  \n/*   callApi = async () => {\n    const response = await fetch('/api/weather');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    \n    return body;\n  }; */\n  \n  handleSubmit = async e => {\n    e.preventDefault();\n   \n    const response = await fetch('api/weather', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ cityName: this.state.country }),\n    });\n    const body = await response.json();\n    \n    this.setState({ responseToPost: body });\n  };\n  \nrender() {\n    return (\n      <div className=\"App\">\n        <h1><Badge color=\"warning\">Weather React application</Badge></h1>\n        <Form action=\"api/weather\"method =\"post\" onSubmit={this.handleSubmit}>\n\n          <FormGroup>\n            <Label for=\"city\"Ciudad></Label>\n            <Input\n              type=\"text\"\n              id=\"city\"\n              value={this.state.country}\n              onChange={e => this.setState({ country: e.target.value })}\n            />\n          </FormGroup>\n          {/* <button type=\"submit\">Submit</button> */}\n          <Button color=\"danger\"type=\"submit\">Search</Button>\n        </Form>\n\n        {this.state.responseToPost!==''\n          ? <>\n                <p>Temperatura de {this.state.responseToPost.city}: {this.state.responseToPost.temp} celcius</p>\n                <p>Descripcion: {this.state.responseToPost.desc}</p>\n                <img src={this.state.responseToPost.icon_url}></img>\n            </>\n          : <Spinner type=\"grow\" color=\"primary\" />\n        }\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}