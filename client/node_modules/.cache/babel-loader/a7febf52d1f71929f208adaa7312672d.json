{"ast":null,"code":"var _jsxFileName = \"/Users/Bruno/Dev/Fullstack/weather-app-react/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { Badge, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: '',\n      country: '',\n      responseToPost: ''\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('api/weather', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cityName: this.state.country\n        })\n      });\n      const body = await response.json();\n      this.setState({\n        responseToPost: body\n      });\n    };\n  }\n\n  componentDidMount() {\n    /*     this.callApi()\n          .then(res => this.setState({ response: res.express }))\n          .catch(err => console.log(err)); */\n  }\n  /*   callApi = async () => {\n      const response = await fetch('/api/weather');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      \n      return body;\n    }; */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Weather React application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        action: \"api/weather\",\n        method: \"post\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"city\",\n            Ciudad: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            id: \"city\",\n            value: this.state.country,\n            onChange: e => this.setState({\n              country: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"danger\",\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), this.state.responseToPost !== '' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperatura de \", this.state.responseToPost.city, \": \", this.state.responseToPost.temp, \" celcius\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Descripcion: \", this.state.responseToPost.desc]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.responseToPost.icon_url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Bruno/Dev/Fullstack/weather-app-react/client/src/App.js"],"names":["React","Component","Badge","Button","Form","FormGroup","Label","Input","FormText","App","state","response","country","responseToPost","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","cityName","json","setState","componentDidMount","render","target","value","city","temp","desc","icon_url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,SAA7B,EAAwCC,KAAxC,EAA+CC,KAA/C,EAAsDC,QAAtD,QAAsE,YAAtE;AAEA,OAAO,WAAP;;;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BS,KAD0B,GAClB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,OAAO,EAAE,EAFH;AAGNC,MAAAA,cAAc,EAAE;AAHV,KADkB;;AAAA,SAqB1BC,YArB0B,GAqBX,MAAMC,CAAN,IAAW;AACxBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAML,QAAQ,GAAG,MAAMM,KAAK,CAAC,aAAD,EAAgB;AAC1CC,QAAAA,MAAM,EAAE,MADkC;AAE1CC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFiC;AAK1CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWE;AAAvB,SAAf;AALoC,OAAhB,CAA5B;AAOA,YAAMQ,IAAI,GAAG,MAAMT,QAAQ,CAACa,IAAT,EAAnB;AAEA,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,cAAc,EAAEO;AAAlB,OAAd;AACD,KAjCyB;AAAA;;AAO1BM,EAAAA,iBAAiB,GAAG;AACtB;AACA;AACA;AACG;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;;AAgBAC,EAAAA,MAAM,GAAG;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,MAAM,EAAC,aAAb;AAA0B,QAAA,MAAM,EAAE,MAAlC;AAAyC,QAAA,QAAQ,EAAE,KAAKb,YAAxD;AAAA,gCAEE,QAAC,SAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,GAAG,EAAC,MAAX;AAAiB,YAAA,MAAM;AAAvB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,EAAE,EAAC,MAFL;AAGE,YAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWE,OAHpB;AAIE,YAAA,QAAQ,EAAEG,CAAC,IAAI,KAAKU,QAAL,CAAc;AAAEb,cAAAA,OAAO,EAAEG,CAAC,CAACa,MAAF,CAASC;AAApB,aAAd;AAJjB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAYE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAsB,UAAA,IAAI,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAiBG,KAAKnB,KAAL,CAAWG,cAAX,KAA4B,EAA5B,iBACC;AAAA,gCACI;AAAA,wCAAmB,KAAKH,KAAL,CAAWG,cAAX,CAA0BiB,IAA7C,QAAqD,KAAKpB,KAAL,CAAWG,cAAX,CAA0BkB,IAA/E;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,sCAAiB,KAAKrB,KAAL,CAAWG,cAAX,CAA0BmB,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,GAAG,EAAE,KAAKtB,KAAL,CAAWG,cAAX,CAA0BoB;AAApC;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA,sBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA6BD;;AAjEyB;;AAoE5B,eAAexB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Badge,Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    response: '',\n    country: '',\n    responseToPost: '',\n  };\n  \n  componentDidMount() {\n/*     this.callApi()\n      .then(res => this.setState({ response: res.express }))\n      .catch(err => console.log(err)); */\n  }\n  \n/*   callApi = async () => {\n    const response = await fetch('/api/weather');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    \n    return body;\n  }; */\n  \n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('api/weather', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ cityName: this.state.country }),\n    });\n    const body = await response.json();\n    \n    this.setState({ responseToPost: body });\n  };\n  \nrender() {\n    return (\n      <div className=\"App\">\n        <h1>Weather React application</h1>\n        <Form action=\"api/weather\"method =\"post\" onSubmit={this.handleSubmit}>\n\n          <FormGroup>\n            <Label for=\"city\"Ciudad></Label>\n            <Input\n              type=\"text\"\n              id=\"city\"\n              value={this.state.country}\n              onChange={e => this.setState({ country: e.target.value })}\n            />\n          </FormGroup>\n          {/* <button type=\"submit\">Submit</button> */}\n          <Button color=\"danger\"type=\"submit\">Search</Button>\n        </Form>\n\n        {this.state.responseToPost!=='' &&\n          <>\n              <p>Temperatura de {this.state.responseToPost.city}: {this.state.responseToPost.temp} celcius</p>\n              <p>Descripcion: {this.state.responseToPost.desc}</p>\n              <img src={this.state.responseToPost.icon_url}></img>\n          </>\n        }\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}