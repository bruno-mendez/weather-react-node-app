{"ast":null,"code":"var _jsxFileName = \"/Users/Bruno/Dev/Fullstack/weather-app-react/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { Col, Row, Spinner, Badge, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: '',\n      loading: '',\n      country: '',\n      responseToPost: ''\n    };\n\n    this.handleSubmit = async e => {\n      this.setState({\n        loading: true\n      });\n      e.preventDefault();\n      const response = await fetch('api/weather', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cityName: this.state.country\n        })\n      });\n      const body = await response.json();\n      this.setState({\n        responseToPost: body\n      });\n      this.setState({\n        loading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: false\n    });\n    /*     this.callApi()\n          .then(res => this.setState({ response: res.express }))\n          .catch(err => console.log(err)); */\n  }\n  /*   callApi = async () => {\n      const response = await fetch('/api/weather');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      \n      return body;\n    }; */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        class: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            color: \"warning\",\n            children: \"Weather React application\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          action: \"api/weather\",\n          method: \"post\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                for: \"city\",\n                children: \"Ciudad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"city\",\n                value: this.state.country,\n                onChange: e => this.setState({\n                  country: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"danger\",\n            type: \"submit\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), this.state.responseToPost !== '' && !this.state.loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Temperatura de \", this.state.responseToPost.city, \": \", this.state.responseToPost.temp, \" celcius\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Descripcion: \", this.state.responseToPost.desc]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.state.responseToPost.icon_url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), this.state.loading && /*#__PURE__*/_jsxDEV(Spinner, {\n          type: \"grow\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Bruno/Dev/Fullstack/weather-app-react/client/src/App.js"],"names":["React","Component","Col","Row","Spinner","Badge","Button","Form","FormGroup","Label","Input","FormText","App","state","response","loading","country","responseToPost","handleSubmit","e","setState","preventDefault","fetch","method","headers","body","JSON","stringify","cityName","json","componentDidMount","render","target","value","city","temp","desc","icon_url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,OAAnB,EAA4BC,KAA5B,EAAkCC,MAAlC,EAA0CC,IAA1C,EAAgDC,SAAhD,EAA2DC,KAA3D,EAAkEC,KAAlE,EAAyEC,QAAzE,QAAyF,YAAzF;AAEA,OAAO,WAAP;;;;AAEA,MAAMC,GAAN,SAAkBX,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BY,KAD0B,GAClB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,OAAO,EAAE,EAFH;AAGNC,MAAAA,OAAO,EAAE,EAHH;AAINC,MAAAA,cAAc,EAAE;AAJV,KADkB;;AAAA,SAuB1BC,YAvB0B,GAuBX,MAAMC,CAAN,IAAW;AACxB,WAAKC,QAAL,CAAc;AAAEL,QAAAA,OAAO,EAAE;AAAX,OAAd;AACAI,MAAAA,CAAC,CAACE,cAAF;AACA,YAAMP,QAAQ,GAAG,MAAMQ,KAAK,CAAC,aAAD,EAAgB;AAC1CC,QAAAA,MAAM,EAAE,MADkC;AAE1CC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFiC;AAK1CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWG;AAAvB,SAAf;AALoC,OAAhB,CAA5B;AAOA,YAAMS,IAAI,GAAG,MAAMX,QAAQ,CAACe,IAAT,EAAnB;AACA,WAAKT,QAAL,CAAc;AAAEH,QAAAA,cAAc,EAAEQ;AAAlB,OAAd;AACA,WAAKL,QAAL,CAAc;AAAEL,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KApCyB;AAAA;;AAQ1Be,EAAAA,iBAAiB,GAAG;AAClB,SAAKV,QAAL,CAAc;AAAEL,MAAAA,OAAO,EAAE;AAAX,KAAd;AACJ;AACA;AACA;AACG;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;;AAiBAgB,EAAAA,MAAM,GAAG;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACG,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE,MAAZ;AAAA,gCACD;AAAA,iCAAI,QAAC,KAAD;AAAO,YAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADC,eAED,QAAC,IAAD;AAAM,UAAA,MAAM,EAAC,aAAb;AAA0B,UAAA,MAAM,EAAE,MAAlC;AAAyC,UAAA,QAAQ,EAAE,KAAKb,YAAxD;AAAA,kCAEI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,mCACA,QAAC,SAAD;AAAA,sCACE,QAAC,KAAD;AAAO,gBAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,KAAD;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,EAAE,EAAC,MAFL;AAGE,gBAAA,KAAK,EAAE,KAAKL,KAAL,CAAWG,OAHpB;AAIE,gBAAA,QAAQ,EAAEG,CAAC,IAAI,KAAKC,QAAL,CAAc;AAAEJ,kBAAAA,OAAO,EAAEG,CAAC,CAACa,MAAF,CAASC;AAApB,iBAAd;AAJjB;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAiBE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,QAAd;AAAsB,YAAA,IAAI,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFC,EAsBA,KAAKpB,KAAL,CAAWI,cAAX,KAA4B,EAA5B,IAAkC,CAAE,KAAKJ,KAAL,CAAWE,OAA/C,iBACC;AAAA,kCACM;AAAA,0CAAmB,KAAKF,KAAL,CAAWI,cAAX,CAA0BiB,IAA7C,QAAqD,KAAKrB,KAAL,CAAWI,cAAX,CAA0BkB,IAA/E;AAAA;AAAA;AAAA;AAAA;AAAA,kBADN,eAEM;AAAA,wCAAiB,KAAKtB,KAAL,CAAWI,cAAX,CAA0BmB,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFN,eAGM;AAAK,YAAA,GAAG,EAAE,KAAKvB,KAAL,CAAWI,cAAX,CAA0BoB;AAApC;AAAA;AAAA;AAAA;AAAA,kBAHN;AAAA,wBAvBD,EA6BA,KAAKxB,KAAL,CAAWE,OAAX,iBACC,QAAC,OAAD;AAAS,UAAA,IAAI,EAAC,MAAd;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBA9BD;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAsCD;;AA7EyB;;AAgF5B,eAAeH,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Col, Row, Spinner, Badge,Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    response: '',\n    loading: '',\n    country: '',\n    responseToPost: '',\n  };\n  \n  componentDidMount() {\n    this.setState({ loading: false });\n/*     this.callApi()\n      .then(res => this.setState({ response: res.express }))\n      .catch(err => console.log(err)); */\n  }\n  \n/*   callApi = async () => {\n    const response = await fetch('/api/weather');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    \n    return body;\n  }; */\n  \n  handleSubmit = async e => {\n    this.setState({ loading: true });\n    e.preventDefault();\n    const response = await fetch('api/weather', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ cityName: this.state.country }),\n    });\n    const body = await response.json();\n    this.setState({ responseToPost: body });\n    this.setState({ loading: false });\n  };\n  \nrender() {\n    return (\n      <div className=\"App\">\n         <Row class =\"form\">\n        <h1><Badge color=\"warning\">Weather React application</Badge></h1>\n        <Form action=\"api/weather\"method =\"post\" onSubmit={this.handleSubmit}>\n         \n            <Col md={6}>\n            <FormGroup>\n              <Label for=\"city\">Ciudad</Label>\n              <Input\n                type=\"text\"\n                id=\"city\"\n                value={this.state.country}\n                onChange={e => this.setState({ country: e.target.value })}\n              />\n            </FormGroup>\n            </Col>\n  \n\n          \n          {/* <button type=\"submit\">Submit</button> */}\n          <Button color=\"danger\"type=\"submit\">Search</Button>\n        </Form>\n\n        {this.state.responseToPost!=='' && ! this.state.loading &&\n          <>\n                <p>Temperatura de {this.state.responseToPost.city}: {this.state.responseToPost.temp} celcius</p>\n                <p>Descripcion: {this.state.responseToPost.desc}</p>\n                <img src={this.state.responseToPost.icon_url}></img>\n            </>\n        }\n        {this.state.loading &&\n          <Spinner type=\"grow\" color=\"primary\" />\n        }\n\n      </Row>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}